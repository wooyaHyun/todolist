{{>layout/header}}


<div>
    <h3 id="titleMonth">장부시스템_수정</h3> <span><button id="back">이전</button><button id="update">저장</button><button id="delete">삭제</button></span>

    <input type="hidden" id="id" name="id" value="{{ledger.id}}" />

    </br></br></br>
    <input id="useDate" class="datepicker"  readonly />
    </br>
    </br>
    지출수입 구분
    <select id="dsc" >
    </select>
    </br>
    </br>
    항목선택
    <select id="item" >
    </select>
    </br>
    </br>
    금액 입력
    <input type="text" id="amount" placeholder="금액을 입력하세요" value="{{ledger.amount}}" />
    </br>
    </br>
    사용내용
    <textarea  id="cntn" >{{ledger.cntn}}</textarea>
</div>

{{>layout/footer}}

<script>

//-------init variable-------------
const date = new Date();
const theYear = date.getFullYear();
const theMonth = date.getMonth();
const theDate  = date.getDate();
const theDayOfWeek = date.getDay();
const thisWeek = [];

let expenditureList = [];
let incomeList = [];

//const str = "Hello_123_World_456_!!!";
const regex = /[^0-9]/g;


//-------event-------------
$("#delete").click(function(){
    const id = $("#id").val();

    $.ajax({
        type : 'DELETE',
        url : '/api/v1/ledgers/'+id,
        dataType : 'json',
        contentType : 'application/json; charset= utf-8'
    }).done(function(){
        alert("장부가 삭제되었습니다.");
        window.location.href='/ledgers';
    }).fail(function(error){
        alert(JSON.stringify(error));
    });
});


$("#update").click(function(){
    let useDate = $("#useDate").val();
    useDate = useDate.replace(regex, "");
    const data = {
        cntn : $("#cntn").val(),
        amount : $('#amount').val(),
        ledgerDsc : $('#dsc').val(),
        item : $('#item').val(),
        useDate : useDate,
    };

    const id = $("#id").val();

    $.ajax({
        type: 'PUT',
        url: '/api/v1/ledgers/'+ id,
        dataType : 'json',
        contentType: 'application/json; charset=utf-8',
        data: JSON.stringify(data)

    }).done(function(){
        alert("장부가 수정되었습니다. ");
        window.location.href = '/ledgers';
    }).fail(function(error){
        alert(JSON.stringify(error));
    });
});

$("#back").click(function(){
    window.location.href = "/ledgers";
});

$("#dsc").change(function(){
    itemListCallback($("#dsc").val());

});


//-------func-------------
const selectLedgerDscList = function(){

    $.ajax({
        type : 'GET',
        url : '/api/v1/ledger-dsc',
        dataType : 'json',
        contentType : 'application/json; charset= utf-8',
    }).done(function(data){

        console.log("=====data check=====");
        console.log(data);
        console.log(data.length);
        selectLedgerDscListCallback(data);
    }).fail(function(error){
        alert(JSON.stringify(error));
    });
}

const selectLedgerDscListCallback = function(res){
    //장부항목 리스트 callBack
    const data = res.ledgerDsc;
    expenditureList = res.expenditureItem;
    incomeList = res.incomeItem;

    let html = '';

    $.each(data, function(i, o){
        html += '<option value="'+o.code+'">' + o.title + '</option>' ;
    });

    $("#dsc").append(html);

    const dscTmp = "{{ledger.ledgerDsc}}";
    $("#dsc").val(dscTmp).prop("selected", true);


    itemListCallback($("#dsc").val());

}

const itemListCallback = function(str){
    console.log(str);
    $("#item").empty();

    let html = '';

    if(str == 'EXPENDITURE' ){
        $.each(expenditureList, function(i, o){
            html += '<option value="'+o.code+'">' + o.title + '</option>' ;
        });
    }else{
        $.each(incomeList, function(i, o){
            html += '<option value="'+o.code+'">' + o.title + '</option>' ;
        });
    }

    $("#item").append(html);



}


const init = function(){

    selectLedgerDscList();
    const ddd = "{{ledger.useDate}}";

    const y = ddd.substr(0,4);
    const m = ddd.substr(4,2);
    const d = ddd.substr(6,2);

    const dateTmp = new Date(y, m-1, d);

    setTimeout(() => $('.datepicker').datepicker("setDate", dateTmp ), 200);

    const itemTmp = "{{ledger.item}}";
    $("#item").val(itemTmp).prop("selected", true);
}




init();
</script>